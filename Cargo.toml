[package]
name = "wasm-game-of-life"
version = "0.1.0"
authors = ["Tom Lagier <tom@gliffy.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.63"
web-sys = { version = "0.3", features = ["console", "Gpu",
  'Document',
  'Element',
  'HtmlCanvasElement',
  'WebGlBuffer',
  'WebGlFramebuffer',
  'WebGl2RenderingContext',
  'WebGlProgram',
  'WebGlShader',
  'WebGlUniformLocation',
  'WebGlTexture',
  'WebGlProgram',
  'WebGlVertexArrayObject',
  'Window'] }
winit = { version = "0.24", features = ["web-sys"] }
wasm-bindgen-futures = "0.4.23"
gl = "0.14"
euclid = "0.22"
pathfinder_geometry = "0.5"
pathfinder_gpu = "0.5"
pathfinder_renderer = "0.5"
pathfinder_resources = "0.5"
pathfinder_webgl = { git = "https://github.com/servo/pathfinder" }
pathfinder_simd = "0.5"
js-sys = "0.3"
image = { version = "0.23", default-features = false, features = ["png"]}

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
